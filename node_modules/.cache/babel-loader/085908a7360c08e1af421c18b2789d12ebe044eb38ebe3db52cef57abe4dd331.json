{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arpit\\\\OneDrive\\\\Desktop\\\\New folder\\\\code\\\\RANCHO\\\\frontend\\\\rancho_lab\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Grid from './Grid';\nimport LogicPanel from './LogicPanel';\nimport './App.css';\nimport logo from './ranchlogo.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [robotPosition, setRobotPosition] = useState({\n    x: 1,\n    y: 0\n  });\n  const [directions, setDirections] = useState([]);\n  const handleDirectionsChange = directions => {\n    // Process the directions received from LogicPanel\n    console.log('Directions:', directions);\n    setDirections(directions);\n  };\n  const handleReset = () => {\n    setDirections([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overscroll-contain\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \" bg-indigo-950\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" text-white text-lg  p-2 mx-2\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"h-8\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-screen sm:flex sm:flex-row md:flex-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-w-[30%] \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-neutral-400 p-2 flex text-lg font-bold\",\n          children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            fill: \"none\",\n            viewBox: \"0 0 24 24\",\n            \"stroke-width\": \"1.5\",\n            stroke: \"currentColor\",\n            class: \"w-6 h-6\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              \"stroke-linecap\": \"round\",\n              \"stroke-linejoin\": \"round\",\n              d: \"M16.5 3.75V16.5L12 14.25 7.5 16.5V3.75m9 0H18A2.25 2.25 0 0120.25 6v12A2.25 2.25 0 0118 20.25H6A2.25 2.25 0 013.75 18V6A2.25 2.25 0 016 3.75h1.5m9 0h-9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), \"\\xA0 Instructions\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-row text-md px-2 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"1. Set the starting position: Drag and place the sprite on the stage to set its initial position. Click and drag the sprite to position it where you want it to start.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"2. Add movement blocks: In the block palette on the left side of the screen, locate the \\\"Motion\\\" category. You will find blocks like \\\"Move 10 steps,\\\" \\\"Turn 15 degrees,\\\" and \\\"Go to x: []y:[],\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"3. Use the \\\"Go to x: []y: []\\\" block: Drag the \\\"Go to x: [] y: []\\\" block into the scripting area. Set the x and y values of the block to the coordinates of the target position you want the sprite to move to. For example, if you want the sprite to move to position (200, 100), set the x value to 200 and the y value to 100.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"min-w-[70%]   bg-slate-200 \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-row lg:flex p-4 \",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            robotPosition: robotPosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-full lg:px-2 py-2 lg:py-0 md:py-2\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \" bg-indigo-900 h-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-white bg-indigo-400 w-full p-2 border-rounded-lg\",\n                children: \"Instructions Implemented\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-wrap text-white\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 overscroll-contain\",\n                  children: directions.map((direction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"mb-1\",\n                    children: [\"Robot Moved : \", direction]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 21\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LogicPanel, {\n          onDirectionsChange: handleDirectionsChange,\n          onReset: handleReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"w5H6n5lAXz5ambgzMLJ9QiT5Evg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Grid","LogicPanel","logo","jsxDEV","_jsxDEV","App","_s","robotPosition","setRobotPosition","x","y","directions","setDirections","handleDirectionsChange","console","log","handleReset","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","xmlns","fill","viewBox","stroke","class","d","map","direction","index","onDirectionsChange","onReset","_c","$RefreshReg$"],"sources":["C:/Users/arpit/OneDrive/Desktop/New folder/code/RANCHO/frontend/rancho_lab/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Grid from './Grid';\nimport LogicPanel from './LogicPanel';\nimport './App.css';\nimport logo from './ranchlogo.svg';\n\nfunction App() {\n  const [robotPosition, setRobotPosition] = useState({ x: 1, y: 0 });\n  const [directions, setDirections] = useState([]);\n\n\n  const handleDirectionsChange = (directions) => {\n    // Process the directions received from LogicPanel\n    console.log('Directions:', directions);\n    setDirections(directions);\n  };\n\n  const handleReset = () => {\n    setDirections([]);\n  };\n\n  return (\n    <div className='overscroll-contain'>\n      <header className=' bg-indigo-950'>\n        <div className=' text-white text-lg  p-2 mx-2'>\n          <img src={logo} className=\"h-8\" alt=\"logo\" />\n        </div>\n      </header>\n      <div className='h-screen sm:flex sm:flex-row md:flex-row'>\n        <div className='min-w-[30%] '>\n          <div className='bg-neutral-400 p-2 flex text-lg font-bold'>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M16.5 3.75V16.5L12 14.25 7.5 16.5V3.75m9 0H18A2.25 2.25 0 0120.25 6v12A2.25 2.25 0 0118 20.25H6A2.25 2.25 0 013.75 18V6A2.25 2.25 0 016 3.75h1.5m9 0h-9\" />\n            </svg>\n            &nbsp;\n            Instructions\n          </div>\n          <div className='flex-row text-md px-2 '>\n            <div>\n              1. Set the starting position: Drag and place the sprite on the stage to set its initial position. Click and drag the sprite to position it where you want it to start.\n            </div>\n            <div>\n              2. Add movement blocks: In the block palette on the left side of the screen, locate the \"Motion\" category. You will find blocks like \"Move 10 steps,\" \"Turn 15 degrees,\" and \"Go to x: []y:[],\"\n            </div>\n            <div>\n              3. Use the \"Go to x: []y: []\" block: Drag the \"Go to x: [] y: []\" block into the scripting area. Set the x and y values of the block to the coordinates of the target position you want the sprite to move to. For example, if you want the sprite to move to position (200, 100), set the x value to 200 and the y value to 100.\n            </div>\n          </div>\n          \n        </div>\n        <div className='min-w-[70%]   bg-slate-200 '>\n          <div className='flex-row lg:flex p-4 '>\n            <Grid robotPosition={robotPosition} />\n            <div className='w-full lg:px-2 py-2 lg:py-0 md:py-2'>\n              <div className=' bg-indigo-900 h-full'>\n                <div className='text-white bg-indigo-400 w-full p-2 border-rounded-lg'>\n                  Instructions Implemented\n                </div>\n                <div className=\"flex-wrap text-white\">\n                  \n                  <div className='p-2 overscroll-contain'>\n                  {directions.map((direction, index) => (\n                    <div\n                      key={index}\n                      className=\"mb-1\"\n                    >\n                      Robot Moved : {direction}\n                    </div>\n                  ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <LogicPanel onDirectionsChange={handleDirectionsChange}  onReset={handleReset}/>\n          {/* <button onClick={handlePlayClick}>Play</button>\n          <button onClick={handleResetClick}>Reset</button> */}\n        </div>\n\n        {/* <Grid robotPosition={robotPosition} /> */}\n        \n      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}